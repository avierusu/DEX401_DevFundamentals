<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="getAccounts" doc:id="1be01982-dd34-44a3-b7ab-58b1e2090852" >
		<set-variable value="#[message.attributes.queryParams.accountType]" doc:name="accountType" doc:id="6d302984-30b3-4f85-b856-8d116633f849" variableName="accountType" />
		<set-variable value="#[message.attributes.queryParams.accountName]" doc:name="accountName" doc:id="b2b97058-8bc1-4989-9f04-e89b0941018f" variableName="accountName" />
		<choice doc:name="Choice" doc:id="c4478ec7-357e-46d3-b5de-66191c4e4f4c" >
			<when expression="#[(vars.accountType != null) and (vars.accountName != null)]">
				<db:select doc:name="customersByNameAndType" doc:id="cc9cfb60-c0ba-44d4-9dd6-e3cdffd4cfae" config-ref="accountsGenericDatabase" >
					<db:sql ><![CDATA[SELECT *
  FROM flights_customers
  WHERE name = :accName
  AND accountType = :accType]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	accName: vars.accountName,
	accType: vars.accountType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.accountType != null) and (vars.accountName == null)]">
				<db:select doc:name="customersByType" doc:id="252b7c43-9f5c-4a04-984d-38fee5c3dacc" config-ref="accountsGenericDatabase" >
					<db:sql ><![CDATA[SELECT *
  FROM flights_customers
  WHERE accountType = :accType]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	accType: vars.accountType
}]]]></db:input-parameters>
				</db:select>
			</when>
			<when expression="#[(vars.accountType == null) and (vars.accountName != null)]">
				<db:select doc:name="customersByName" doc:id="fa143c02-a55f-45ac-9a3f-4af5a72d5e06" config-ref="accountsGenericDatabase" >
					<db:sql ><![CDATA[SELECT *
  FROM flights_customers
  WHERE name = :accName]]></db:sql>
					<db:input-parameters ><![CDATA[#[{
	accName: vars.accountName
}]]]></db:input-parameters>
				</db:select>
			</when>
			<otherwise >
				<db:select doc:name="customers" doc:id="fb3d2cf5-d9d7-4358-bb4b-4f72700e8a8b" config-ref="accountsGenericDatabase">
			<db:sql><![CDATA[SELECT *
  FROM flights_customers]]></db:sql>
		</db:select>
			</otherwise>
		</choice>
		<ee:transform doc:name="Transform Message" doc:id="7edba654-6024-4186-9aac-4dd0177c506e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID as Number default 0,
	name: payload01.name default "",
	"type": payload01.accountType default "",
	address: payload01.street as String ++ ", " ++
	         payload01.city as String ++ ", " ++
	         payload01.state as String ++ ", " ++
	         payload01.postal as String ++ ", " ++
	         payload01.country as String,
	airMiles: payload01.miles default 0,
	creationDate: payload01.creationDate default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="dd9ab68d-7fae-400c-9810-e5e75a8452dd" message="#[payload]"/>
	</flow>
	<flow name="getAccountById" doc:id="7f17d063-8686-4311-a7cb-3651afd25a76" >
		<db:select doc:name="customerById" doc:id="d8318478-6924-4776-b3df-137da91926dd" config-ref="accountsGenericDatabase">
			<db:sql ><![CDATA[SELECT *
  FROM flights_customers
  WHERE accountID = :accID]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	accID: message.attributes.uriParams.ID
}]]]></db:input-parameters>
		</db:select>
		<ee:transform doc:name="Transform Message" doc:id="42d1648f-aef3-474e-8eba-1fba69d41bdd" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(payload map ( payload01 , indexOfPayload01 ) -> {
	id: payload01.accountID as Number default 0,
	name: payload01.name default "",
	"type": payload01.accountType default "",
	address: payload01.street as String ++ ", " ++
	         payload01.city as String ++ ", " ++
	         payload01.state as String ++ ", " ++
	         payload01.postal as String ++ ", " ++
	         payload01.country as String,
	airMiles: payload01.miles default 0,
	creationDate: payload01.creationDate default ""
})[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="a28d758d-b401-4c29-be7d-d439302b36e1" message="#[payload]" />
	</flow>
</mule>
