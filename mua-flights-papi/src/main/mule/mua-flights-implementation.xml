<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="a966faf8-fc81-4b86-8b06-a5fd6914448a" >
		<http:listener doc:name="GET /flights" doc:id="8f4ddda4-a71b-4541-a753-0c873ee647c1" config-ref="HTTP_Listener_config" path="/flights" allowedMethods="GET" >
			<http:response statusCode="#[vars.httpStatus default 200]" />
			<http:error-response statusCode="#[vars.httpStatus default 500]">
				<http:body ><![CDATA[#[payload]]]></http:body>
			</http:error-response>
		</http:listener>
		<set-variable value='#[lower(message.attributes.queryParams.airline) default "all"]' doc:name="airline" doc:id="f778749d-6416-4050-a675-f83d0328f770" variableName="airline"/>
		<set-variable value='#[message.attributes.queryParams.code default "ALL"]' doc:name="code" doc:id="14f6b969-61f3-487c-8c00-93900f409424" variableName="code" />
		<validation:is-true doc:name="Is valid" doc:id="a2e219ca-2a73-4c5e-b4a4-4e9628128983" expression="#[ ['ALL', 'SFO', 'LAX', 'CLE', 'PDX', 'PDF'] contains vars.code ]" message='#["Invalid destination " ++ (vars.code default " ")]'/>
		<choice doc:name="Choice" doc:id="84615942-9ade-40d0-a33a-ca6e43d48a9d" >
			<when expression='#[vars.airline == "american"]'>
				<flow-ref doc:name="getAmericanFlights" doc:id="5dc5d221-cffc-4384-9ad5-4530977bcfd0" name="getAmericanFlights"/>
			</when>
			<when expression='#[vars.airline == "united"]'>
				<flow-ref doc:name="getUnitedFlights" doc:id="abe134ac-7f74-4cc6-b61f-0aa36a50a82e" name="getUnitedFlights"/>
			</when>
			<when expression='#[vars.airline == "delta"]'>
				<flow-ref doc:name="getDeltaFlights" doc:id="04c3570b-fe36-4186-95eb-d923530a95bb" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllAirlineFlights" doc:id="f47004e0-d838-437c-b5e8-da8a1d10f8c5" name="getAllAirlineFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="Flight to JSON" doc:id="d88f676a-6d42-4380-941c-4104aa235bdc" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="982bdb02-213f-4f51-a9a0-4b97300a8952" message="#[payload]"/>
		<error-handler >
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="1ea4fe64-6ae9-4bb9-b71b-27dabbb1a8fe" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="No flights" doc:id="19bdd56b-6573-4fce-b42a-e01a14816b51" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "No flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="b6423d79-7c63-4bc6-86d5-f168f357b7db" variableName="httpStatus"/>
			</on-error-propagate>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="54c72a1d-1913-47df-bdeb-7cbee297b565" type="VALIDATION:INVALID_BOOLEAN">
				<ee:transform doc:name="error.description" doc:id="1357b62a-d35c-4fa1-985b-03890a5d72aa" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="400" doc:name="httpStatus" doc:id="3b4eed46-2636-49d3-bdcb-2210c39b3170" variableName="httpStatus" />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getAllAirlineFlights" doc:id="d177268d-49b6-4417-98fe-63a646d8877e" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="2346e86e-b89a-4e98-a985-781a50660acd" >
			<route >
				<flow-ref doc:name="getAmericanFlights" doc:id="e9b05992-9b4f-4ff1-b6c5-b40abfd466d5" name="getAmericanFlights"/>
			</route>
			<route >
				<flow-ref doc:name="getUnitedFlights" doc:id="417eac02-580b-42a8-a5cf-33ffc79e2ec0" name="getUnitedFlights"/>
			</route>
			<route >
				<flow-ref doc:name="getDeltaFlights" doc:id="03973e5a-6e9f-48fc-a60f-f08fe30cefb5" name="getDeltaFlights"/>
			</route>
		</scatter-gather>
		<ee:transform doc:name="Flatten to [Flight]" doc:id="31843309-f927-42cb-9c58-a8bf4edb7df8" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getAmericanFlights" doc:id="94eb51fc-b281-4448-ac6d-55277a94c52a">
		<american-flights-api:get-flights doc:name="Get Flights" doc:id="f22093e3-ecab-48cb-ad53-c93513b7f257" client-id="${secure::american.clientId}" client-secret="${secure::american.clientSecret}" destination='#[if(vars.code == "ALL") null else vars.code]' config-ref="American_Flights_API_Config"/>
		<ee:transform doc:name="Transform Message" doc:id="73ee8606-9250-4507-8af0-16e8797f6caa">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airline: payload01.airlineName,
	flightCode: (payload01.code1 default "") ++ payload01.code2,
	fromAirportCode: payload01.fromAirport,
	toAirportCode: payload01.toAirport,
	departureDate: payload01.takeOffDate,
	emptySeats: payload01.seatsAvailable,
	totalSeats: payload01.totalSeats,
	price: payload01.price,
	planeType: payload01.planeType
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getUnitedFlights" doc:id="03196f7b-0d8a-4fd4-8525-e61f94c37da9">
		<http:request method="GET" doc:name="Get Flights" doc:id="7d9c9ed2-b21f-4cbd-b1ac-0fb7960fea43" config-ref="HTTP_Request_configuration" path="/united/flights{destination}">
			<http:uri-params><![CDATA[#[{
	"destination": if(vars.code == "ALL") "" else ("/" ++ vars.code as String)
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="Transform Message" doc:id="a16d689e-f466-421f-9e42-266e7ef56b94">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.flights map ( flight , indexOfFlight ) -> {
	airline: flight.airlineName,
	flightCode: flight.code,
	fromAirportCode: flight.origin,
	toAirportCode: flight.destination,
	departureDate: flight.departureDate,
	emptySeats: flight.emptySeats,
	price: flight.price,
	planeType: flight.planeType
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getDeltaFlights" doc:id="fab48cf1-a45e-4f41-b596-0efbebf271dd" >
		<choice doc:name="Choice" doc:id="6fa28ff1-d7ef-4a87-a9be-0208ace00d2d" >
			<when expression='#[vars.code == "ALL"]'>
				<wsc:consume operation="listAllFlights" doc:name="Get Flights" doc:id="fa9475fd-d659-4f0f-bf17-76bc35298e57" config-ref="Delta_Web_Service_Consumer_Config" />
				<ee:transform doc:name="Transform Message" doc:id="d01d1a3e-98d5-4e09-a040-bc9faf6f2151" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#listAllFlightsResponse.*return map ( return , indexOfReturn ) -> {
	airline: return.airlineName default "",
	flightCode: return.code default "",
	fromAirportCode: return.origin default "",
	toAirportCode: return.destination default "",
	departureDate: return.departureDate default "",
	emptySeats: return.emptySeats default 0,
	price: return.price default 0,
	planeType: return.planeType default ""
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</when>
			<otherwise >
				<ee:transform doc:name="Pass Code" doc:id="741f657d-c23a-45bf-8cfa-7875f0dcaa9d">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
				<wsc:consume doc:name="Get Flights" doc:id="7dc5f9f7-8158-4528-96a6-46da717fa421" config-ref="Delta_Web_Service_Consumer_Config" operation="findFlight" />
				<ee:transform doc:name="Transform Message" doc:id="655cb9eb-f55e-4711-99db-09999d515daf">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airline: return.airlineName default "",
	flightCode: return.code default "",
	fromAirportCode: return.origin default "",
	toAirportCode: return.destination default "",
	departureDate: return.departureDate default "",
	emptySeats: return.emptySeats default 0,
	price: return.price default 0,
	planeType: return.planeType default ""
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</flow>
</mule>
